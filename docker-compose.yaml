services:
  db:
    build:
      context: ./db
      dockerfile: Dockerfile
    container_name: accessibility_database
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      AUTHENTICATOR_POSTGRES_PASSWORD: ${AUTHENTICATOR_POSTGRES_PASSWORD}
    ports:
      - "${PGPORT:-5432}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      # - ./initdb:/docker-entrypoint-initdb.d  # place SQL here to create roles/schemas


    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 20
  # api:
  #   image: postgrest/postgrest:v13.0.7
  #   ports: ["3000:3000"]
  #   environment:
  #     PGRST_DB_URI: postgres://authenticator:${AUTHENTICATOR_POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
  #     PGRST_DB_ANON_ROLE: anon
  #     PGRST_DB_SCHEMAS: api
  #     PGRST_OPENAPI_SERVER_PROXY_URI: http://127.0.0.1:3000
  #   depends_on:
  #     db:
  #       condition: service_healthy
    
volumes:
  pgdata: